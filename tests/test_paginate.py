import pytest\\nfrom moffee.compositor import composite, Direction, Type\\n\\n@pytest.fixture\\ndef sample_document() -> str:\\n    return '''\\n    ---\\n    background-color: gray\\n    layout: split\\n    default_h1: true\\n    default_h2: false\\n    ---\\n    # Main Title\\n    \\n    ## Subtitle\\n    \\n    Content of the first slide.\\n    \\n    ---\\n    @(background-color=yellow)\\n    ## Second Slide\\n    \\n    - Bullet point 1\\n    - Bullet point 2\\n    \\n    ### Subheader\\n    More content.\\n    ![](Image.png)\\n    \\n    ## Another Header\\n    ### Consecutive Header\\n    \\n    Normal text here.\\n    \\n    # New Main Title\\n    \\n    1. Numbered list\\n    2. Second item\\n    3. Third item\\n    \\n    This is a long paragraph\\n    It continues for several lines to demonstrate the line count limit. We'll add more lines to ensure it goes over the 12 non-empty lines limit.\\n    This is line 4. This is line 5. This is line 6. This is line 7. This is line 8. This is line 9. This is line 10. This is line 11. This is line 12.\\n    '''\\n\\ndef test_paginate_creates_correct_number_of_pages(sample_document):\\n    pages = composite(sample_document)\\n    assert len(pages) > 1, 'Pagination should create multiple pages'\\n\\ndef test_frontmatter_parsing(sample_document):\\n    pages = composite(sample_document)\\n    assert pages[0].option.layout == 'split', 'Layout option should be set from frontmatter'\\n    assert pages[0].option.default_h1 is True, 'Default h1 should be true'\\n    assert pages[0].option.default_h2 is False, 'Default h2 should be false'\\n    assert pages[0].option.styles == {'background-color': 'gray'}, 'Background color should be set from frontmatter'\\n\\ndef test_style_overwrite(sample_document):\\n    pages = composite(sample_document)\\n    assert pages[1].option.styles == {'background-color': 'yellow'}, 'Style should be overwritten by deco'\\n    assert pages[0].option.styles == {'background-color': 'gray'}, 'Original style should not be affected'\\n\\n# Add more test functions as needed\\n\\nif __name__ == '__main__':\\n    pytest.main()