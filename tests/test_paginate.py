import pytest\\nfrom moffee.compositor import composite, Direction, Type\\n\\n@pytest.fixture\\ndef sample_document() -> str:\\n    return '''\\n---\\nbackground-color: gray\\nlayout: split\\ndefault_h1: true\\ndefault_h2: false\\n---\\n# Main Title\\n\\n## Subtitle\\n\\nContent of the first slide.\\n\\n---\\n@(background-color=yellow)\\n## Second Slide\\n\\n- Bullet point 1\\n- Bullet point 2\\n\\n### Subheader\\nMore content.\\n![](Image.png)\\n\\n## Another Header\\n### Consecutive Header\\n\\nNormal text here.\\n\\n# New Main Title\\n\\n1. Numbered list\\n2. Second item\\n3. Third item\\n\\nThis is a long paragraph\\nIt continues for several lines to demonstrate the line count limit.\\nWe'll add more lines to ensure it goes over the 12 non-empty lines limit.\\nThis is line 4.\\nThis is line 5.\\nThis is line 6.\\nThis is line 7.\\nThis is line 8.\\nThis is line 9.\\nThis is line 10.\\nThis is line 11.\\nThis is line 12.'''\\n\\n@pytest.mark.parametrize(\\"doc, expected_pages\\", [\\n    (sample_document(), 2),\\n])\\ndef test_paginate_creates_correct_number_of_pages(doc, expected_pages):\\n    pages = composite(doc)\\n    assert len(pages) == expected_pages\\n\\n@pytest.mark.parametrize(\\"doc, expected_layout, expected_default_h1, expected_default_h2\\", [\\n    (sample_document(), 'split', True, False),\\n])\\ndef test_frontmatter_parsing(doc, expected_layout, expected_default_h1, expected_default_h2):\\n    pages = composite(doc)\\n    assert pages[0].option.layout == expected_layout\\n    assert pages[0].option.default_h1 == expected_default_h1\\n    assert pages[0].option.default_h2 == expected_default_h2\\n\\n@pytest.mark.parametrize(\\"doc, expected_background_color\\", [\\n    (sample_document(), 'yellow'),\\n])\\ndef test_style_overwrite(doc, expected_background_color):\\n    pages = composite(doc)\\n    assert pages[1].option.styles == {'background-color': expected_background_color}\\n    assert pages[0].option.styles == {'background-color': 'gray'}\\n\\n# Add more test functions as needed to cover other aspects of the functionality\\n