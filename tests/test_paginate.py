import pytest\nfrom moffee.compositor import composite, Direction, Type\n\n\n@pytest.fixture\ndef sample_document() -> str:\n    return '''\n---\nbackground-color: gray\nlayout: split\ndefault_h1: true\ndefault_h2: false\n---\n# Main Title\n\n## Subtitle\n\nContent of the first slide.\n\n---\n@(background-color=yellow)\n## Second Slide\n\n- Bullet point 1\n- Bullet point 2\n\n### Subheader\nMore content.\n![](Image.png)\n\n## Another Header\n### Consecutive Header\n\nNormal text here.\n\n# New Main Title\n\n1. Numbered list\n2. Second item\n3. Third item\n\nThis is a long paragraph\nIt continues for several lines to demonstrate the line count limit.\nWe'll add more lines to ensure it goes over the 12 non-empty lines limit.\nThis is line 4.\nThis is line 5.\nThis is line 6.\nThis is line 7.\nThis is line 8.\nThis is line 9.\nThis is line 10.\nThis is line 11.\nThis is line 12.\n'''\n\n\ndef test_paginate_creates_correct_number_of_pages():\n    doc = sample_document()\n    pages = composite(doc)\n    assert len(pages) == 2, 'Expected 2 pages but got ' + str(len(pages))\n\n\ndef test_frontmatter_parsing():\n    doc = sample_document()\n    pages = composite(doc)\n    assert pages[0].option.layout == 'split', 'Expected layout to be split but got ' + pages[0].option.layout\n    assert pages[0].option.default_h1 is True, 'Expected default_h1 to be True but got ' + str(pages[0].option.default_h1)\n    assert pages[0].option.default_h2 is False, 'Expected default_h2 to be False but got ' + str(pages[0].option.default_h2)\n\n\ndef test_style_overwrite():\n    doc = sample_document()\n    pages = composite(doc)\n    assert pages[1].option.styles == {'background-color': 'yellow'}, 'Expected background-color to be yellow but got ' + str(pages[1].option.styles)\n    assert pages[0].option.styles == {'background-color': 'gray'}, 'Expected background-color to be gray but got ' + str(pages[0].option.styles)\n\n# Add more test functions as needed to cover other aspects of the functionality\n\nif __name__ == "__main__":\n    pytest.main()\n